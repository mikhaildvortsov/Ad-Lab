#!/usr/bin/env ts-node

/**
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Tribute –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
 * –ó–∞–ø—É—Å–∫: npx ts-node scripts/check-tribute-production.ts
 */

import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç) –∏ .env
config({ path: '.env.local' });
config();

interface CheckResult {
  name: string;
  status: 'pass' | 'fail' | 'warning';
  message: string;
}

class TributeProductionChecker {
  private results: CheckResult[] = [];

  check(name: string, condition: boolean, passMessage: string, failMessage: string): void {
    this.results.push({
      name,
      status: condition ? 'pass' : 'fail',
      message: condition ? passMessage : failMessage
    });
  }

  warn(name: string, message: string): void {
    this.results.push({
      name,
      status: 'warning',
      message
    });
  }

  async runChecks(): Promise<void> {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Tribute –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É...\n');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    this.check(
      'TRIBUTE_API_KEY',
      !!process.env.TRIBUTE_API_KEY,
      'API –∫–ª—é—á Tribute –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
      'TRIBUTE_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –æ—Ç Tribute'
    );

    this.check(
      'TRIBUTE_API_URL',
      !!process.env.TRIBUTE_API_URL,
      'URL API Tribute –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
      'TRIBUTE_API_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é'
    );

    this.check(
      'TRIBUTE_WEBHOOK_SECRET',
      !!process.env.TRIBUTE_WEBHOOK_SECRET,
      'Webhook —Å–µ–∫—Ä–µ—Ç Tribute –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
      'TRIBUTE_WEBHOOK_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ö–†–ò–¢–ò–ß–ù–û –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!'
    );

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    this.check(
      'NEXTAUTH_URL',
      !!process.env.NEXTAUTH_URL && !process.env.NEXTAUTH_URL.includes('localhost'),
      'Production URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
      'NEXTAUTH_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç localhost'
    );

    this.check(
      'NODE_ENV',
      process.env.NODE_ENV === 'production',
      'NODE_ENV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ production',
      'NODE_ENV –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ production'
    );

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    this.check(
      'DATABASE_URL',
      !!process.env.DATABASE_URL && !process.env.DATABASE_URL.includes('localhost'),
      'Production –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞',
      'DATABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞'
    );

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const webhookSecret = process.env.TRIBUTE_WEBHOOK_SECRET;
    if (webhookSecret) {
      this.check(
        'Webhook Secret Length',
        webhookSecret.length >= 32,
        'Webhook —Å–µ–∫—Ä–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π',
        'Webhook —Å–µ–∫—Ä–µ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞)'
      );
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL/HTTPS
    const nextAuthUrl = process.env.NEXTAUTH_URL;
    if (nextAuthUrl) {
      this.check(
        'HTTPS Configuration',
        nextAuthUrl.startsWith('https://'),
        'HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
        'NEXTAUTH_URL –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTPS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ'
      );
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (!process.env.TRIBUTE_MIN_AMOUNT) {
      this.warn('TRIBUTE_MIN_AMOUNT', '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞');
    }

    if (!process.env.TRIBUTE_MAX_AMOUNT) {
      this.warn('TRIBUTE_MAX_AMOUNT', '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞');
    }

    this.displayResults();
  }

  private displayResults(): void {
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n');

    let passCount = 0;
    let failCount = 0;
    let warningCount = 0;

    this.results.forEach(result => {
      const icon = result.status === 'pass' ? '‚úÖ' : result.status === 'fail' ? '‚ùå' : '‚ö†Ô∏è';
      console.log(`${icon} ${result.name}: ${result.message}`);

      if (result.status === 'pass') passCount++;
      else if (result.status === 'fail') failCount++;
      else warningCount++;
    });

    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${passCount}`);
    console.log(`‚ùå –û—à–∏–±–∫–∏: ${failCount}`);
    console.log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${warningCount}`);

    if (failCount === 0) {
      console.log('\nüéâ Tribute –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!');
    } else {
      console.log('\nüö® –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!');
    }

    console.log('\nüìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:');
    console.log('1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ webhook —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π');
    console.log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã –Ω–∞ –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏');
    console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ');
    console.log('5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('6. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ rate limiting –¥–ª—è API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤');
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
async function main() {
  const checker = new TributeProductionChecker();
  await checker.runChecks();
}

if (require.main === module) {
  main().catch(console.error);
}

export default TributeProductionChecker; 
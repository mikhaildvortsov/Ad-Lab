require('dotenv').config({ path: '.env.local' });

async function diagnoseEmailProduction() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ email –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ...\n');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('üìã 1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  
  const vars = {
    'RESEND_API_KEY': process.env.RESEND_API_KEY,
    'RESEND_FROM_EMAIL': process.env.RESEND_FROM_EMAIL,
    'RESEND_FROM_NAME': process.env.RESEND_FROM_NAME,
    'SEND_REAL_EMAILS': process.env.SEND_REAL_EMAILS,
    'NODE_ENV': process.env.NODE_ENV,
    'NEXTAUTH_URL': process.env.NEXTAUTH_URL
  };
  
  const issues = [];
  
  Object.entries(vars).forEach(([key, value]) => {
    if (value) {
      if (key === 'RESEND_API_KEY') {
        const isValid = value.startsWith('re_');
        console.log(`   ‚úÖ ${key}: ${isValid ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' : '‚ùå –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç'}`);
        if (!isValid) issues.push(`${key} –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "re_"`);
      } else if (key === 'RESEND_FROM_EMAIL') {
        const isValid = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
        console.log(`   ‚úÖ ${key}: ${value} ${isValid ? '(–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)' : '‚ùå (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)'}`);
        if (!isValid) issues.push(`${key} –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email`);
      } else {
        console.log(`   ‚úÖ ${key}: ${value}`);
      }
    } else {
      console.log(`   ‚ùå ${key}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û`);
      issues.push(`${key} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
    }
  });
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint
  console.log('\nüì° 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
  
  try {
    const baseUrl = process.env.NEXTAUTH_URL || 'http://localhost:3000';
    const response = await fetch(`${baseUrl}/api/test-email-config`);
    const data = await response.json();
    
    console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}`);
    console.log(`   –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ: ${data.configured ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
    
    if (data.errors && data.errors.length > 0) {
      console.log('   –û—à–∏–±–∫–∏:');
      data.errors.forEach(error => {
        console.log(`     - ${error}`);
      });
    }
    
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API: ${error.message}`);
    issues.push('–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API');
  }
  
  // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email
  console.log('\nüìß 3. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email:');
  
  if (process.env.RESEND_API_KEY && process.env.RESEND_FROM_EMAIL) {
    try {
      const baseUrl = process.env.NEXTAUTH_URL || 'http://localhost:3000';
      const testResponse = await fetch(`${baseUrl}/api/test-resend`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          to: process.env.RESEND_FROM_EMAIL, // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç–æ—Ç –∂–µ email
          subject: 'Test email from production'
        }),
      });
      
      const testData = await testResponse.json();
      console.log(`   –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∞: ${testResponse.status}`);
      console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${testData.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);
      
      if (!testData.success) {
        console.log(`   –û—à–∏–±–∫–∞: ${testData.error}`);
        issues.push(`–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email: ${testData.error}`);
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`);
      issues.push(`–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email: ${error.message}`);
    }
  } else {
    console.log('   ‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏)');
  }
  
  // 4. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  console.log('\n' + '='.repeat(60));
  console.log('üìã –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢:');
  console.log('='.repeat(60));
  
  if (issues.length === 0) {
    console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! Email –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.');
  } else {
    console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ ${issues.length} –ø—Ä–æ–±–ª–µ–º:`);
    issues.forEach((issue, index) => {
      console.log(`   ${index + 1}. ${issue}`);
    });
    
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Resend dashboard');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ production');
    console.log('   4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
  }
  
  console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: PRODUCTION_SETUP.md');
}

diagnoseEmailProduction().catch(console.error);
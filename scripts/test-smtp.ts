import * as dotenv from 'dotenv';
import { EmailService } from '@/lib/services/email-service';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' });

async function testSendGrid() {
  console.log('üß™ Testing SendGrid configuration...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  const requiredEnvVars = {
    'SENDGRID_API_KEY': process.env.SENDGRID_API_KEY ? '***' + process.env.SENDGRID_API_KEY.slice(-10) : undefined,
    'SENDGRID_FROM_EMAIL': process.env.SENDGRID_FROM_EMAIL,
    'SENDGRID_FROM_NAME': process.env.SENDGRID_FROM_NAME,
    'SEND_REAL_EMAILS': process.env.SEND_REAL_EMAILS,
  };

  console.log('üìã Environment variables:');
  Object.entries(requiredEnvVars).forEach(([key, value]) => {
    const status = value ? '‚úÖ' : '‚ùå';
    console.log(`${status} ${key}: ${value || 'NOT SET'}`);
  });

  console.log('\nüîß Testing SendGrid API connection...');
  
  try {
    const connectionResult = await EmailService.testSendGridConnection();
    
    if (connectionResult.success) {
      console.log('‚úÖ SendGrid API connection successful!');
      
      // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
      const testEmail = process.argv[2];
      if (testEmail) {
        console.log(`\nüìß Sending test email to: ${testEmail}`);
        
        const emailResult = await EmailService.sendEmail({
          to: testEmail,
          subject: '‚úÖ SendGrid API Test - Ad Lab',
          html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
              <h1 style="color: #2563eb;">üéâ SendGrid Test Successful!</h1>
              <p>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SendGrid API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>
              <div style="background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h3>–î–µ—Ç–∞–ª–∏ —Ç–µ—Å—Ç–∞:</h3>
                <ul>
                  <li><strong>API:</strong> SendGrid</li>
                  <li><strong>–û—Ç:</strong> ${process.env.SENDGRID_FROM_EMAIL}</li>
                  <li><strong>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong> ${new Date().toLocaleString()}</li>
                </ul>
              </div>
              <p style="color: #6b7280; font-size: 14px;">
                –≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SendGrid –Ω–∞—Å—Ç—Ä–æ–µ–∫ Ad Lab.
              </p>
            </div>
          `,
          text: `
SendGrid Test Successful!

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SendGrid API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

API: SendGrid
–û—Ç: ${process.env.SENDGRID_FROM_EMAIL}
–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString()}

–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SendGrid –Ω–∞—Å—Ç—Ä–æ–µ–∫ Ad Lab.
          `
        });

        if (emailResult.success) {
          console.log('‚úÖ Test email sent successfully!');
          console.log('üì¨ Check your inbox (and spam folder)');
        } else {
          console.error('‚ùå Failed to send test email:', emailResult.error);
        }
      } else {
        console.log('\nüí° To send a test email, run:');
        console.log('npx tsx scripts/test-sendgrid.ts your@email.com');
      }
      
    } else {
      console.error('‚ùå SendGrid connection failed:', connectionResult.error);
    }
    
  } catch (error) {
    console.error('üí• Test failed:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSendGrid()
  .then(() => {
    console.log('\nüèÅ SendGrid test completed!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nüí• SendGrid test failed:', error);
    process.exit(1);
  });
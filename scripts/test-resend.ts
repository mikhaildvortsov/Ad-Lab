import dotenv from 'dotenv';
import { EmailService } from '@/lib/services/email-service';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' });

async function testResend() {
  console.log('üß™ Testing Resend configuration...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  const requiredEnvVars = {
    'RESEND_API_KEY': process.env.RESEND_API_KEY ? '***' + process.env.RESEND_API_KEY.slice(-10) : undefined,
    'RESEND_FROM_EMAIL': process.env.RESEND_FROM_EMAIL,
    'RESEND_FROM_NAME': process.env.RESEND_FROM_NAME,
    'SEND_REAL_EMAILS': process.env.SEND_REAL_EMAILS,
    'NODE_ENV': process.env.NODE_ENV
  };

  console.log('üìã Environment Variables:');
  Object.entries(requiredEnvVars).forEach(([key, value]) => {
    console.log(`  ${key}: ${value || '‚ùå NOT SET'}`);
  });

  console.log('\nüîß Testing Resend API connection...');
  
  try {
    const connectionResult = await EmailService.testResendConnection();
    
    if (connectionResult.success) {
      console.log('‚úÖ Resend API connection successful!');
    } else {
      console.error('‚ùå Resend connection failed:', connectionResult.error);
      return;
    }

    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω email –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
    const testEmail = process.argv[2];
    if (testEmail) {
      console.log(`\nüìß Sending test email to: ${testEmail}`);
      
      const emailResult = await EmailService.sendEmail({
        to: testEmail,
        subject: '‚úÖ Resend API Test - Ad Lab',
        html: `
        <h1 style="color: #2563eb;">üéâ Resend Test Successful!</h1>
        <p>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Resend API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>
        <h3>–î–µ—Ç–∞–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:</h3>
        <ul>
          <li><strong>API:</strong> Resend</li>
          <li><strong>–û—Ç:</strong> ${process.env.RESEND_FROM_EMAIL}</li>
          <li><strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString()}</li>
        </ul>
        <hr>
        <p style="color: #666; font-size: 12px;">
        –≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Resend –Ω–∞—Å—Ç—Ä–æ–µ–∫ Ad Lab.
        </p>
        `,
        text: `
Resend Test Successful!

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Resend API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

API: Resend
–û—Ç: ${process.env.RESEND_FROM_EMAIL}
–í—Ä–µ–º—è: ${new Date().toLocaleString()}

–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Resend –Ω–∞—Å—Ç—Ä–æ–µ–∫ Ad Lab.
        `
      });

      if (emailResult.success) {
        console.log('‚úÖ Test email sent successfully!');
      } else {
        console.error('‚ùå Failed to send test email:', emailResult.error);
      }
    } else {
      console.log('\nüí° To send a test email, run:');
      console.log('npx tsx scripts/test-resend.ts your@email.com');
    }

  } catch (error) {
    console.error('‚ùå Resend connection failed:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testResend()
  .then(() => {
    console.log('\nüèÅ Resend test completed!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nüí• Resend test failed:', error);
    process.exit(1);
  });